/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ai_05_TicTacToe;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author Ryan
 */
public class TicTacToeGUI extends javax.swing.JFrame {
    State startingBoard = new State("---------");
    Problem problem = new ProblemTicTacToe(startingBoard);
    int movesTaken = 0;
    State nextState = null;
    State tempState = null;
    /**
     * Creates new form TicTacToeGUI
     */
    public TicTacToeGUI() {
        initComponents();
        board.setText(problem.visualizePuzzletoString(startingBoard));
        List<Action> possibleMoves = problem.actions(startingBoard);
        System.out.println("Possible moves for player" + Arrays.toString(possibleMoves.toArray()));


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userField = new javax.swing.JTextField();
        playerMove = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        aiMove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        board = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userFieldActionPerformed(evt);
            }
        });

        playerMove.setText("Submit Move");
        playerMove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerMoveActionPerformed(evt);
            }
        });

        jLabel1.setText("Player move format \"1 1\"");

        aiMove.setText("AI player move");
        aiMove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aiMoveActionPerformed(evt);
            }
        });

        board.setColumns(20);
        board.setRows(5);
        jScrollPane1.setViewportView(board);

        jLabel2.setText("First number = rowNum");

        jLabel3.setText("Second Number = column number");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(playerMove))
                            .addComponent(aiMove))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerMove)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aiMove)
                    .addComponent(jLabel3))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 
    State afterResult = null;
    private void userFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userFieldActionPerformed

    private void aiMoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aiMoveActionPerformed
        // TODO add your handling code here:
        
        Action bestAction = problem.miniMax(nextState);
        nextState = problem.result(tempState,bestAction);
        tempState = nextState;
        board.setText(problem.visualizePuzzletoString(nextState));
        List<Action> possibleMoves = problem.actions(nextState);
        System.out.println("Possible moves for player" + Arrays.toString(possibleMoves.toArray()));


    }//GEN-LAST:event_aiMoveActionPerformed

    private void playerMoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerMoveActionPerformed
        // TODO add your handling code here:
        Action playerAction = new Action(userField.getText().strip());

        if(movesTaken == 0){
            nextState = problem.result(startingBoard, playerAction);
        }

        else{
            if(problem.terminalTest(problem.result(tempState,playerAction)) == true){
                System.out.println("`hiswefu");
            }
            else{
                                nextState = problem.result(tempState,playerAction);

            }
        }
        movesTaken++;
         System.out.println(movesTaken);
       tempState = nextState;
        
  
        board.setText(problem.visualizePuzzletoString(nextState));
        
    }//GEN-LAST:event_playerMoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTacToeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTacToeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTacToeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTacToeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicTacToeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aiMove;
    private javax.swing.JTextArea board;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton playerMove;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables
}
